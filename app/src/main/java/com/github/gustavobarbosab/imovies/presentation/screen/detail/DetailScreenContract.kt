package com.github.gustavobarbosab.imovies.presentation.screen.detail

import androidx.compose.runtime.Immutable
import com.github.gustavobarbosab.imovies.common.presentation.UiState
import com.github.gustavobarbosab.imovies.presentation.screen.detail.model.DetailScreenModel

/**
 * This file contains all the classes that represent the contract of the Screen.
 * - ScreenState: Represents the state of the screen.
 * - Intent: Represents the intents that the screen can emit.
 * - Result: Represents the results from the intents.
 * - SideEffect: Represents the side effects generated by a intent and state.
 */

@Immutable
data class DetailScreenState(
    val movieId: Long,
    val uiState: UiState<DetailScreenModel>
) {
    companion object {
        fun initialState(movieId: Long) = DetailScreenState(
            movieId = movieId,
            uiState = UiState.Loading
        )
    }
}

sealed class DetailScreenIntent {
    data object Init : DetailScreenIntent()
    data object BackPressed : DetailScreenIntent()
    data object RetryLoad : DetailScreenIntent()
}

sealed class DetailScreenActionResult {
    data object Loading : DetailScreenActionResult()
    data class Success(val model: DetailScreenModel) : DetailScreenActionResult()
    data object Failure : DetailScreenActionResult()
}
