package com.github.gustavobarbosab.imovies.presentation.screen.home

import androidx.compose.runtime.Immutable
import com.github.gustavobarbosab.imovies.presentation.screen.home.model.HomeMovieModel

/**
 * This file contains all the classes that represent the contract of the Home Screen.
 * - HomeScreenState: Represents the state of the screen.
 * - HomeIntent: Represents the intents that the screen can emit.
 * - HomeResult: Represents the results from the intents.
 * - HomeSideEffect: Represents the side effects generated by a intent and state.
 */

@Immutable
data class HomeScreenState(
    val topBannerMovies: MovieSectionState,
    val popularMovies: MovieSectionState,
    val topRatedMovies: MovieSectionState,
    val upcomingMovies: MovieSectionState
) {

    sealed class MovieSectionState {
        data class ShowMovies(val movies: List<HomeMovieModel>) : MovieSectionState()
        data object Loading : MovieSectionState()
        data object LoadFailure : MovieSectionState()
    }

    companion object {
        fun initialState() = HomeScreenState(
            topBannerMovies = MovieSectionState.Loading,
            popularMovies = MovieSectionState.Loading,
            topRatedMovies = MovieSectionState.Loading,
            upcomingMovies = MovieSectionState.Loading
        )
    }
}

sealed class HomeIntent {
    data object Init : HomeIntent()
    data class MovieClicked(val movie: HomeMovieModel) : HomeIntent()
}

sealed class HomeResult {
    data class ShowTopBannerMovies(val movies: List<HomeMovieModel>) : HomeResult()
    data object LoadingTopBanner : HomeResult()
    data object TopBannerLoadFailure : HomeResult()

    data class ShowPopularMovies(val movies: List<HomeMovieModel>) : HomeResult()
    data object LoadingPopularMovies : HomeResult()
    data object PopularMoviesLoadFailure : HomeResult()

    data class ShowTopRatedMovies(val movies: List<HomeMovieModel>) : HomeResult()
    data object LoadingTopRatedMovies : HomeResult()
    data object TopRatedMoviesLoadFailure : HomeResult()

    data class ShowUpcomingMovies(val movies: List<HomeMovieModel>) : HomeResult()
    data object LoadingUpcomingMovies : HomeResult()
    data object UpcomingMoviesLoadFailure : HomeResult()

    data class DoNothing(val internalReason: String? = null) : HomeResult()
}

sealed class HomeSideEffect {
    data class NavigateToMovieDetail(val movie: HomeMovieModel) : HomeSideEffect()
    data object LoadPopularFailure : HomeSideEffect()
    data object LoadTopBannerFailure : HomeSideEffect()
    data object LoadTopRatedFailure : HomeSideEffect()
    data object LoadUpcomingFailure : HomeSideEffect()
}